DROP TABLE #OVERAGE_ADDL_FIELDS;							
							
SELECT A.LOAN_SKEY, FORMAT(A.PAYOFF_DATE,'d','us') AS PAYOFF_DATE, DATEDIFF(DAY,A.PAYOFF_DATE,GETDATE()) AS PAYOFF_AGING,							
J.BEG_OVERAGE_AMT, I.CUR_OVERAGE_AMT, B.ORIGINAL_VALUE PRE_PAYOFF_STATUS, A.LOAN_STATUS_DESCRIPTION, A.LOAN_SUB_STATUS_DESCRIPTION,							
C.NEW_VALUE AS RELEASE_STATUS, D.REL_FEE, E.EST_FEE, CONCAT(F.FIRST_NAME,SPACE(1),F.MIDDLE_NAME,SPACE(1),F.LAST_NAME) AS BORROWER_NAME,							
CONCAT(F.MAIL_FIRST_NAME,SPACE(1),F.MAIL_MIDDLE_NAME,SPACE(1),F.MAIL_LAST_NAME) AS MAIL_BORROWER_NAME,							
FORMAT(F.DEATH_DATE,'d','us') AS BOR_DEATH_DATE,							
CASE WHEN G.FIRST_NAME IS NULL THEN NULL							
ELSE CONCAT (G.FIRST_NAME,SPACE(1),G.MIDDLE_NAME,SPACE(1),G.LAST_NAME) END AS CO_BORROWER_NAME,							
CASE WHEN G.FIRST_NAME IS NULL THEN NULL							
ELSE CONCAT(G.MAIL_FIRST_NAME,SPACE(1),G.MAIL_MIDDLE_NAME,SPACE(1),G.MAIL_LAST_NAME) END AS MAIL_CO_BORROWER_NAME,							
FORMAT(G.DEATH_DATE,'d','us') AS COBOR_DEATH_DATE, H.STATE_CODE AS PROP_STATE,
case when H.STATE_CODE in('CT','IL','MI','MS','MO','NE','NV','NH','NY','NC','OR','SC','TX','WA','WI') Then 'Restricted_Offshore' 
else null end as STATE_RESTRICTION,
H.COUNTY_CLERK_NAME, H.COUNTY_CLERK_SKEY							
INTO #OVERAGE_ADDL_FIELDS							
FROM RMS.V_LOANMASTER A							
LEFT JOIN							
(SELECT * FROM							
(SELECT * FROM RMS.V_LOGCOLUMNDATACHANGE A WHERE UPPER(AUDIT_TYPE_DESCRIPTION) = 'LOAN STATUS') A							
WHERE CREATED_DATE = (SELECT MAX(X.CREATED_DATE) FROM (SELECT * FROM RMS.V_LOGCOLUMNDATACHANGE A							
                                                                WHERE UPPER(AUDIT_TYPE_DESCRIPTION) = 'LOAN STATUS') X							
                                    WHERE A.LOAN_SKEY = X.LOAN_SKEY)							
) B ON A.LOAN_SKEY = B.LOAN_SKEY							
LEFT JOIN							
(SELECT * FROM							
(SELECT * FROM RMS.V_LOGCOLUMNDATACHANGE A WHERE UPPER(AUDIT_TYPE_DESCRIPTION) = 'STATUS CHANGE REASON'							
                                                 AND UPPER(AUDIT_DESCRIPTION) = 'RELEASE') A							
WHERE CREATED_DATE = (SELECT MAX(X.CREATED_DATE) FROM (SELECT * FROM RMS.V_LOGCOLUMNDATACHANGE A							
                                                                WHERE UPPER(AUDIT_TYPE_DESCRIPTION) = 'STATUS CHANGE REASON'							
                                                                      AND UPPER(AUDIT_DESCRIPTION) = 'RELEASE') X							
                                    WHERE A.LOAN_SKEY = X.LOAN_SKEY)							
) C ON A.LOAN_SKEY = C.LOAN_SKEY							
LEFT JOIN							
(SELECT A.LOAN_SKEY, SUM(A.OVERAGE_AMOUNT) AS REL_FEE FROM RMS.V_TRANSACTION A							
INNER JOIN RMS.V_LOANMASTER B ON A.LOAN_SKEY = B.LOAN_SKEY							
LEFT JOIN RMS.V_DISBURSEMENT C ON A.DISBURSEMENT_SKEY = C.DISBURSEMENT_SKEY							
WHERE A.TRANSACTION_CODE IN ('2143','2221') AND A.CREATED_DATE >= B.PAYOFF_DATE AND UPPER(C.PAY_TO) = 'DOCSOLUTION, INC.'							
GROUP BY A.LOAN_SKEY							
) D ON A.LOAN_SKEY = D.LOAN_SKEY							
LEFT JOIN							
(SELECT LOAN_SKEY, SUM(CHECK_AMOUNT) AS EST_FEE FROM RMS.V_DISBURSEMENT							
WHERE ESTIMATED_FLAG = '1' AND VOIDED_DATE IS NULL AND UPPER(RECOVERABLE_FROM) = 'B'							
GROUP BY LOAN_SKEY) E ON A.LOAN_SKEY = E.LOAN_SKEY							
LEFT JOIN RMS.V_CONTACTMASTER F ON A.LOAN_SKEY = F.LOAN_SKEY AND UPPER(F.CONTACT_TYPE_DESCRIPTION) = 'BORROWER'							
LEFT JOIN RMS.V_CONTACTMASTER G ON A.LOAN_SKEY = G.LOAN_SKEY AND UPPER(G.CONTACT_TYPE_DESCRIPTION) = 'CO-BORROWER'							
LEFT JOIN RMS.V_PROPERTYMASTER H ON A.LOAN_SKEY = H.LOAN_SKEY							
INNER JOIN							
(SELECT * FROM							
(SELECT A.LOAN_SKEY, SUM(OVERAGE_AMOUNT) AS CUR_OVERAGE_AMT FROM RMS.V_TRANSACTION A							
GROUP BY A.LOAN_SKEY) A							
WHERE CUR_OVERAGE_AMT < 0) I ON A.LOAN_SKEY = I.LOAN_SKEY							
LEFT JOIN							
(SELECT A.LOAN_SKEY, SUM(OVERAGE_AMOUNT) AS BEG_OVERAGE_AMT FROM RMS.V_TRANSACTION A							
WHERE A.TRANSACTION_CODE IN ('2610')							
GROUP BY A.LOAN_SKEY) J ON A.LOAN_SKEY = J.LOAN_SKEY							
WHERE A.PAYOFF_DATE IS NOT NULL							
;							
							
SELECT A.*,							
CASE WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'							
          AND REL_FEE IS NOT NULL AND BOR_DEATH_DATE IS NULL THEN 'LRC - GOOD TO GO - BORROWER'							
	 WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'						
          AND UPPER(PROP_STATE) IN ('NC','PR') AND BOR_DEATH_DATE IS NULL THEN 'LRC - GOOD TO GO - BORROWER - PR_NC'							
     WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'							
          AND REL_FEE IS NOT NULL AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL THEN 'LRC - GOOD TO GO - COBORROWER'							
	 WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'						
          AND UPPER(PROP_STATE) IN ('NC','PR') AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL THEN 'LRC - GOOD TO GO - COBORROWER - PR_NC'							
     WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'							
          AND REL_FEE IS NOT NULL THEN 'LRC - GOOD TO GO - ESTATE'							
	 WHEN EST_FEE IS NULL AND RELEASE_STATUS = 'Lien Release  Completed'						
          AND UPPER(PROP_STATE) IN ('NC','PR') THEN 'LRC - GOOD TO GO - ESTATE - PR_NC'   							
	 WHEN RELEASE_STATUS = 'Lien Release  Completed' AND REL_FEE IS NOT NULL AND BOR_DEATH_DATE IS NULL						
	      THEN 'LRC - REVIEW ESTIMATED FEES - BORROWER'						
     WHEN RELEASE_STATUS = 'Lien Release  Completed' AND UPPER(PROP_STATE) IN ('NC','PR') AND BOR_DEATH_DATE IS NULL							
	      THEN 'LRC - REVIEW ESTIMATED FEES - BORROWER - PR_NC'						
     WHEN RELEASE_STATUS = 'Lien Release  Completed' AND REL_FEE IS NOT NULL							
	      AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL THEN 'LRC - REVIEW ESTIMATED FEES - COBORROWER'						
	 WHEN RELEASE_STATUS = 'Lien Release  Completed' AND UPPER(PROP_STATE) IN ('NC','PR')						
	      AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL THEN 'LRC - REVIEW ESTIMATED FEES - COBORROWER - PR_NC'						
     WHEN RELEASE_STATUS = 'Lien Release  Completed' AND REL_FEE IS NOT NULL THEN 'LRC - REVIEW ESTIMATED FEES - ESTATE'							
	 WHEN RELEASE_STATUS = 'Lien Release  Completed' AND UPPER(PROP_STATE) IN ('NC','PR') THEN 'LRC - REVIEW ESTIMATED FEES - ESTATE - PR_NC'  						
     WHEN EST_FEE IS NULL AND REL_FEE IS NOT NULL AND BOR_DEATH_DATE IS NULL THEN 'PLRC - GOOD TO GO - BORROWER'							
	 WHEN EST_FEE IS NULL AND UPPER(PROP_STATE) IN ('NC','PR') AND BOR_DEATH_DATE IS NULL						
	      THEN 'PLRC - GOOD TO GO - BORROWER - PR_NC'						
     WHEN EST_FEE IS NULL AND REL_FEE IS NOT NULL AND CO_BORROWER_NAME IS NOT NULL							
	      AND COBOR_DEATH_DATE IS NULL THEN 'PLRC - GOOD TO GO - COBORROWER'						
	 WHEN EST_FEE IS NULL AND UPPER(PROP_STATE) IN ('NC','PR')						
	      AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL THEN 'PLRC - GOOD TO GO - COBORROWER - PR_NC'						
     WHEN EST_FEE IS NULL AND REL_FEE IS NOT NULL THEN 'PLRC - GOOD TO GO - ESTATE'							
	 WHEN EST_FEE IS NULL AND UPPER(PROP_STATE) IN ('NC','PR') THEN 'PLRC - GOOD TO GO - ESTATE - PR_NC'   						
	 WHEN REL_FEE IS NOT NULL AND BOR_DEATH_DATE IS NULL THEN 'PLRC - REVIEW ESTIMATED FEES - BORROWER'						
     WHEN UPPER(PROP_STATE) IN ('NC','PR') AND BOR_DEATH_DATE IS NULL THEN 'PLRC - REVIEW ESTIMATED FEES - BORROWER - PR_NC'							
     WHEN REL_FEE IS NOT NULL AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL							
	      THEN 'PLRC - REVIEW ESTIMATED FEES - COBORROWER'						
	 WHEN UPPER(PROP_STATE) IN ('NC','PR') AND CO_BORROWER_NAME IS NOT NULL AND COBOR_DEATH_DATE IS NULL						
	      THEN 'PLRC - REVIEW ESTIMATED FEES - COBORROWER - PR_NC'						
     WHEN REL_FEE IS NOT NULL THEN 'PLRC - REVIEW ESTIMATED FEES - ESTATE'							
	 WHEN UPPER(PROP_STATE) IN ('NC','PR') THEN 'PLRC - REVIEW ESTIMATED FEES - ESTATE - PR_NC'  						
ELSE NULL END AS STATUS,							
CASE WHEN RELEASE_STATUS = 'Lien Release  Completed' AND REL_FEE IS NOT NULL THEN 'NO ACTION NEEDED'							
     WHEN RELEASE_STATUS = 'Lien Release  Completed' AND UPPER(PROP_STATE) IN ('NC','PR') THEN 'NO ACTION NEEDED'							
     WHEN RELEASE_STATUS = 'Lien Release  Completed' AND REL_FEE IS NULL THEN 'RELEASE COMPLETED CHECK POSTING PENDING'							
	 WHEN REL_FEE IS NULL THEN 'PENDING LIEN RELEASE - CHECK POSTING PENDING'						
	 ELSE 'PENDING LIEN RELEASE - RELEASE CHECK POSTED' END AS LIEN_REL_STATUS,						
CASE WHEN PAYOFF_AGING <= 30 THEN '0-30 DAYS'							
	 WHEN PAYOFF_AGING <= 60 THEN '31-60 DAYS'						
	 WHEN PAYOFF_AGING <= 90 THEN '61-90 DAYS'						
	 WHEN PAYOFF_AGING <= 120 THEN '91-120 DAYS'						
	 WHEN PAYOFF_AGING <= 150 THEN '121-150 DAYS'						
	 WHEN PAYOFF_AGING <= 180 THEN '151-180 DAYS'						
	 ELSE 'GT 180 DAYS' END AS AGE_BUCKET						
FROM #OVERAGE_ADDL_FIELDS A							
;							

